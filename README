CouchPdb

CouchPdb is a CouchDB (http://couchdb.apache.org/) library for Puredata
(http://puredata.info/). As CouchDB uses JSON (http://json.org/) data
for communication, there are two accompaning objects that are more or
less a lemma of the main object in the library for encoding and decoding
JSON strings.


About CouchDB (From the official website)

Apache CouchDB is a document-oriented database that can be queried and
indexed in a MapReduce fashion using JavaScript. CouchDB also offers
incremental replication with bi-directional conflict detection and
resolution.

CouchDB provides a RESTful JSON API than can be accessed from any
environment that allows HTTP requests. There are myriad third-party client
libraries that make this even easier from your programming language of
choice. CouchDBâ€™s built in Web administration console speaks directly
to the database using HTTP requests issued from your browser.


About Puredata (From the official website)

Pd (aka Pure Data) is a real-time graphical programming environment for
audio, video, and graphical processing. It is the third major branch
of the family of patcher programming languages known as Max (Max/FTS,
ISPW Max, Max/MSP, jMax, etc.) originally developed by Miller Puckette
and company at IRCAM. The core of Pd is written and maintained by Miller
Puckette and includes the work of many developers, making the whole
package very much a community effort.


Externals in the library

[couchdb]
Object for communication with a CouchDB instance.

[json-encode]
Object for encoding data to JSON.

[json-decode]
Object for decoding JSON data.

For the usage of the externals see the help patches for the objects.


How to build CouchPdb

Edit the makefile to fit your platform, it is currently made for Debian Wheezy.
Make sure to have the header files for libcurl and json-c installed, on Debian the
libraries are called libcurl-dev (with several packages providing this virtual package)
and libjson0-dev respectively. 

make

or

make couchdb-test

The latter one also launches Pd with a sample patch.


TODO:
- Creating arrays in [json-encode]
- Makefile for Mac OS X and Windows (MinGW)
- Implementing OAUTH for connecting with Ubuntu One
